<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<properties>
    <uuid>LlamaCpp</uuid>
    <provider>cpp</provider>
    <ver>1.0.6</ver>
    <apiVer>1.4.1</apiVer>
    <author>Nikolay V. Ulyanov</author>
    <contacts>ulianownv@mail.ru</contacts>
    <homePage>http://www.smcsystem.ru</homePage>
    <os>WIN</os>
    <arch>X86_64</arch>
    <className>LlamaCpp.dll::getInstance</className>
    <categories>NN, GAI, LLM</categories>
    <copyrightAndLicense>
        <entry>
            <key>en</key>
            <value><![CDATA[The author and copyright holder is Nikolay V. Ulyanov.
The program is free for use.
Forbidden: changing the program code, its sale / resale, as well as other actions and rights not explicitly permitted.
The program is supplied as is. For problems arising during the operation or installation of the program, the author, developer and distributor are not responsible.
            ]]></value>
        </entry>
        <entry>
            <key>ru</key>
            <value><![CDATA[Автором и правообладателем является Ульянов Николай Владимирович.
Программа бесплатна для использования.
Запрещено: изменение кода программы, её продажа/перепродажа а так же иные не разрешенные явно действия и права.
Программа поставляется как есть. За проблемы, возникающие в процессе эксплуатации или установки программы, автор, разработчик и распространитель ответственности не несут.
            ]]></value>
        </entry>
    </copyrightAndLicense>
    <date>07-02-2025</date>

    <defaultSettings>
        <value>
            <name>modelPath</name>
            <type>STRING</type>
            <value></value>
            <subType>STRING</subType>
            <description>
                <entry>
                    <key>ru</key>
                    <value>Имя файла в рабочей папке, содержащем модель. С расширением GGUF. Не работает без неё!</value>
                </entry>
                <entry>
                    <key>en</key>
                    <value>The name of the file in the working folder containing the model. With the GGUF extension. Doesn't work without it!</value>
                </entry>
            </description>
        </value>
        <value>
            <name>temperature</name>
            <type>FLOAT</type>
            <value>1.0</value>
            <description>
                <entry>
                    <key>ru</key>
                    <value><![CDATA[Обновляет логиты l_i` = l_i/ t. Когда t <= 0.0f, максимальный логит сохраняется на своем исходном значении, остальные устанавливаются в -inf]]></value>
                </entry>
                <entry>
                    <key>en</key>
                    <value><![CDATA[Updates the logits l_i` = l_i/ t. When t <= 0.0f, the maximum logit is kept at it's original value, the rest are set to -inf]]></value>
                </entry>
            </description>
        </value>
        <value>
            <name>minP</name>
            <type>FLOAT</type>
            <value>0.05</value>
            <description>
                <entry>
                    <key>ru</key>
                    <value><![CDATA[Минимальная выборка P описана в https://github.com/ggerganov/llama.cpp/pull/3841.]]></value>
                </entry>
                <entry>
                    <key>en</key>
                    <value><![CDATA[Minimum P sampling as described in https://github.com/ggerganov/llama.cpp/pull/3841.]]></value>
                </entry>
            </description>
        </value>
        <value>
            <name>contextSize</name>
            <type>INTEGER</type>
            <value>512</value>
            <description>
                <entry>
                    <key>ru</key>
                    <value>Размер контекста или максимальное количество токенов. Если 0, то читается из модели.</value>
                </entry>
                <entry>
                    <key>en</key>
                    <value>Context size or maximum number of tokens. If 0, then read from the model.</value>
                </entry>
            </description>
        </value>
        <value>
            <name>ngl</name>
            <type>INTEGER</type>
            <value>0</value>
            <description>
                <entry>
                    <key>ru</key>
                    <value>Количество слоев для хранения в VRAM.</value>
                </entry>
                <entry>
                    <key>en</key>
                    <value>Number of layers to store in VRAM.</value>
                </entry>
            </description>
        </value>
        <value>
            <name>nBatch</name>
            <type>INTEGER</type>
            <value>2048</value>
            <description>
                <entry>
                    <key>ru</key>
                    <value>Логический максимальный размер пакета, который можно отправить в llama_decode.</value>
                </entry>
                <entry>
                    <key>en</key>
                    <value>Logical maximum batch size that can be submitted to llama_decode.</value>
                </entry>
            </description>
        </value>
        <value>
            <name>nThreds</name>
            <type>INTEGER</type>
            <value>0</value>
            <description>
                <entry>
                    <key>ru</key>
                    <value>Количество потоков, используемых для генерации. Если 0, то старается использовать все доступные.</value>
                </entry>
                <entry>
                    <key>en</key>
                    <value>Number of threads to use for generation. If 0, then tries to use all available ones.</value>
                </entry>
            </description>
        </value>
        <value>
            <name>flashAttn</name>
            <type>BOOLEAN</type>
            <value>true</value>
            <description>
                <entry>
                    <key>ru</key>
                    <value>Использовать ли мгновенное внимание.</value>
                </entry>
                <entry>
                    <key>en</key>
                    <value>Whether to use flash attention.</value>
                </entry>
            </description>
        </value>
        <value>
            <name>gpu_split_mode</name>
            <type>INTEGER</type>
            <value>1</value>
            <validValues>
                <value>0</value>
                <value>1</value>
                <value>2</value>
            </validValues>
            <description>
                <entry>
                    <key>ru</key>
                    <value><![CDATA[Как разделить модель на несколько графических процессоров. Значения:
0-не делить,
1-разделить слои и KV между графическими процессорами,
2-Разделить слои и KV между графическими процессорами, использовать тензорный параллелизм, если поддерживается.
                    ]]></value>
                </entry>
                <entry>
                    <key>en</key>
                    <value><![CDATA[How to split the model across multiple GPUs. Values:
0-don't split,
1-split layers and KV across GPUs,
2-split layers and KV across GPUs, use tensor parallelism if supported.
                    ]]></value>
                </entry>
            </description>
        </value>
        <value>
            <name>main_gpu</name>
            <type>INTEGER</type>
            <value>0</value>
            <description>
                <entry>
                    <key>ru</key>
                    <value>Графический процессор, который используется для всей модели, когда gpu_split_mode равен 0.</value>
                </entry>
                <entry>
                    <key>en</key>
                    <value>The GPU that is used for the entire model when gpu_split_mode is 0.</value>
                </entry>
            </description>
        </value>
    </defaultSettings>

    <types>
        <type t="default" minS="1" maxS="1">
            <description>
                <entry k="ru">
                    <value><![CDATA[Отвечает на входящие сообщения.
Входящие сообщения (принимает всю историю переписки):
    если первым сообщением является число, то рассматривает его как идентификатор контекста. Контекст - это, упрощенно, отдельная комната для беседы.
        Если отсутствует, то использует идентификатор контекста 0.
    все остальные сообщения, рассматривает как история разговора, формат:
        если строка - считает что их написал пользователь.
        если массив объектов, формат объекта: role, content.
Ответ возвращает в виде массива объектов с одним объектом. Роль - assistant.
Используется встроенный кеш разговора, позволяющий не обрабатывать предыдущие сообщения, что ускоряет вычисления.
В начале модуль определяет новые сообщения, и обрабатывает только их. Если старые сообщения отличаются от тех что есть в памяти, то происходит полный пересчет.
                    ]]></value>
                </entry>
                <entry k="en">
                    <value><![CDATA[Responds to incoming messages.
Incoming messages (accepts the entire history of correspondence):
    if the first message is a number, then it is considered as a context identifier. Context is, in simple terms, a separate room for a conversation.
        If it is absent, then it uses the context identifier 0.
    all other messages are considered as a conversation history, format:
        if a string, then it is considered that they were written by the user.
        if an array of objects, the object format is: role, content.
The response is returned as an array of objects with one object. Role - assistant.
The built-in conversation cache is used, which allows not to process previous messages, which speeds up calculations.
At the beginning, the module determines new messages, and processes only them. If old messages differ from those in memory, then a complete recalculation occurs.
                    ]]></value>
                </entry>
            </description>
            <sources>
                <source>
                    <count>1</count>
                    <elements>
                        <element t="VALUE_ANY" o="true" c="1" vt="INTEGER" v="0">
                            <description>
                                <entry k="ru" v="идентификатор контекста. Контекст - это упрощенно отдельная комната для беседы."/>
                                <entry k="en" v="context id. Context is simply a separate room for a conversation."/>
                            </description>
                        </element>
                        <element t="VALUE_ANY" c="-1" vt="OBJECT_ARRAY">
                            <description>
                                <entry k="ru" v="Принимает либо строки, в этом случае считает что их написал пользователь. Либо массивы объектов, формат объекта: role, content."/>
                                <entry k="en" v="Accepts either strings, in which case it considers them to have been written by the user. Or arrays of objects, object format: role, content."/>
                            </description>
                            <value><![CDATA[[{"role":"user","content":"Hello world"}]]]></value>
                        </element>
                    </elements>
                </source>
            </sources>
            <output>
                <element t="VALUE" c="1" vt="OBJECT_ARRAY">
                    <value><![CDATA[[{"role":"assistant","content":"Hello world!"}]]]></value>
                </element>
            </output>
        </type>
        <type t="talk" minS="1" maxS="1">
            <description>
                <entry k="ru">
                    <value>Аналогичен default, но принимает только новые сообщения.</value>
                </entry>
                <entry k="en">
                    <value>Similar to default, but only accepts new messages.</value>
                </entry>
            </description>
            <sources>
                <source>
                    <count>1</count>
                    <elements>
                        <element t="VALUE_ANY" o="true" c="1" vt="INTEGER" v="0">
                            <description>
                                <entry k="ru" v="идентификатор контекста. Контекст - это упрощенно отдельная комната для беседы."/>
                                <entry k="en" v="context id. Context is simply a separate room for a conversation."/>
                            </description>
                        </element>
                        <element t="VALUE_ANY" c="-1" vt="OBJECT_ARRAY">
                            <description>
                                <entry k="ru" v="Принимает либо строки, в этом случае считает что их написал пользователь. Либо массивы объектов, формат объекта: role, content."/>
                                <entry k="en" v="Accepts either strings, in which case it considers them to have been written by the user. Or arrays of objects, object format: role, content."/>
                            </description>
                            <value><![CDATA[[{"role":"user","content":"Hello world"}]]]></value>
                        </element>
                    </elements>
                </source>
            </sources>
            <output>
                <element t="VALUE" c="1" vt="OBJECT_ARRAY">
                    <value><![CDATA[[{"role":"assistant","content":"Hello world!"}]]]></value>
                </element>
            </output>
        </type>
        <type t="clean" minS="0" maxS="1">
            <description>
                <entry k="ru">
                    <value>Очищает историю контексты (память) сети. Если нет входящих данных, то очищает первый контекст, с индексом 0.</value>
                </entry>
                <entry k="en">
                    <value>Очищает историю контекстов (памяти) сети. If there is no incoming data, then clears the first context, with index 0.</value>
                </entry>
            </description>
            <sources>
                <source>
                    <count>1</count>
                    <elements>
                        <element t="VALUE_ANY" o="true" c="1" vt="INTEGER" v="0">
                            <description>
                                <entry k="ru" v="Идентификатор контекст."/>
                                <entry k="en" v="Context id."/>
                            </description>
                        </element>
                    </elements>
                </source>
            </sources>
            <output/>
        </type>
        <type t="remove" minS="0" maxS="1">
            <description>
                <entry k="ru">
                    <value>Удаляет контекст (память) сети. Если нет входящих данных, то очищает первый контекст, с индексом 0.</value>
                </entry>
                <entry k="en">
                    <value>Remove the network context (memory). If there is no incoming data, then clears the first context, with index 0.</value>
                </entry>
            </description>
            <sources>
                <source>
                    <count>1</count>
                    <elements>
                        <element t="VALUE_ANY" o="true" c="1" vt="INTEGER" v="0">
                            <description>
                                <entry k="ru" v="Идентификатор контекст."/>
                                <entry k="en" v="Context id."/>
                            </description>
                        </element>
                    </elements>
                </source>
            </sources>
            <output/>
        </type>
    </types>

    <useStorage>true</useStorage>
    <threadSafe>false</threadSafe>

    <description>
        <entry>
            <key>en</key>
            <value>Module example.</value>
        </entry>
        <entry>
            <key>ru</key>
            <value>Пример модуля.</value>
        </entry>
    </description>

    <help>
        <entry>
            <key>en</key>
            <value><![CDATA[The module is a chat bot using a language neural network.
Uses the llama.cpp library (https://github.com/ggerganov/llama.cpp).
Before starting work, you need to upload the model in GGUF format to the project folder and specify the file name in the modelPath setting.
            ]]></value>
        </entry>
        <entry>
            <key>ru</key>
            <value><![CDATA[Модуль является чат ботом, использующим языковую нейронную сеть.
Использует библиотеку llama.cpp (https://github.com/ggerganov/llama.cpp).
Перед началом работы надо в папку проекта загрузить модель в формате GGUF и имя файла указать в настройке modelPath.
            ]]></value>
        </entry>
    </help>

    <examples/>
    <icon><![CDATA[]]></icon>

</properties>
