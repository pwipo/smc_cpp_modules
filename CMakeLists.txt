cmake_minimum_required(VERSION 3.12)
project(smcmodules)

set(CMAKE_CXX_STANDARD 17)
#set(BUILD_ARCH "-m64")
#set(CMAKE_SHARED_LINKER_FLAGS "-static-libgcc -static-libstdc++ -static")
#set_property(GLOBAL PROPERTY PREFIX "")

if($ENV{_WIN64})
    message("arch:" "_WIN64")
    include_directories("../SMCModuleDefinitionProvider")
    link_libraries(${CMAKE_CURRENT_SOURCE_DIR}/../SMCModuleDefinitionProvider/cmake-build-release-visual-studio-64/ModuleLoaderProviderWIN64.lib)
elseif($ENV{_WIN32})
    message("arch:" "_WIN32")
    include_directories("../SMCModuleDefinitionProvider")
    link_libraries(${CMAKE_CURRENT_SOURCE_DIR}/../SMCModuleDefinitionProvider/cmake-build-release-visual-studio-32/ModuleLoaderProviderWIN32.lib)
elseif($ENV{_LINUX32})
    message("arch:" "_LINUX32")
    include_directories("..")
    set(CMAKE_CXX_FLAGS "-m32")
    if ($ENV{_LINUX_DEBIAN})
        link_libraries(${CMAKE_CURRENT_SOURCE_DIR}/../shelf/providers/cpp/Linux32/ModuleLoaderProviderLINUX_DEBIAN32.so)
    elseif ($ENV{_LINUX_UBUNTU})
        link_libraries(${CMAKE_CURRENT_SOURCE_DIR}/../shelf/providers/cpp/Linux32/ModuleLoaderProviderLINUX_UBUNTU32.so)
    else ()
        link_libraries(${CMAKE_CURRENT_SOURCE_DIR}/../shelf/providers/cpp/Linux32/ModuleLoaderProviderLINUX632.so)
    endif ()
elseif($ENV{_LINUX64})
    message("arch:" "_LINUX64")
    include_directories("..")
    if ($ENV{_LINUX_DEBIAN})
        link_libraries(${CMAKE_CURRENT_SOURCE_DIR}/../shelf/providers/cpp/Linux32/ModuleLoaderProviderLINUX_DEBIAN64.so)
    elseif ($ENV{_LINUX_UBUNTU})
        link_libraries(${CMAKE_CURRENT_SOURCE_DIR}/../shelf/providers/cpp/Linux32/ModuleLoaderProviderLINUX_UBUNTU64.so)
    else ()
        link_libraries(${CMAKE_CURRENT_SOURCE_DIR}/../shelf/providers/cpp/Linux32/ModuleLoaderProviderLINUX64.so)
    endif ()
#    include_directories("..")
endif()

add_subdirectory(example)

